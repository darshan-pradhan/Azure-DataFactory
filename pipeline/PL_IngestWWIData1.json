{
	"name": "PL_IngestWWIData1",
	"properties": {
		"activities": [
			{
				"name": "ForEachOLTPTable",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.tableList",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data from OLTP 2 stagingcontainer",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "OLTP_AzureSqlTable1",
									"type": "DatasetReference",
									"parameters": {
										"SourceTableName_02": {
											"value": "@pipeline().parameters.sourceTableName",
											"type": "Expression"
										},
										"SourceSchema01": {
											"value": "@pipeline().parameters.sourceTableSchema",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "OLTP_Json1",
									"type": "DatasetReference",
									"parameters": {
										"TableName4Storage": {
											"value": "@pipeline().parameters.sourceTableName",
											"type": "Expression"
										},
										"SchemaName4Storage": {
											"value": "@pipeline().parameters.sourceTableSchema",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "JoinAndDropData01",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "ForEachOLTPTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "JoinAndDropdataflow1",
						"type": "DataFlowReference",
						"datasetParameters": {
							"OrderData1": {
								"TableName4Storage": {
									"value": "@pipeline().parameters.sourceTableName",
									"type": "Expression"
								},
								"SchemaName4Storage": {
									"value": "@pipeline().parameters.sourceTableSchema",
									"type": "Expression"
								}
							},
							"sinkintoOrder1": {
								"ODS_SchemaName": {
									"value": "@pipeline().parameters.sourceTableSchema",
									"type": "Expression"
								},
								"ODS_TableName": {
									"value": "@pipeline().parameters.sourceTableName",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "GenericSCDType2",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "GenericSCDType2",
						"type": "DataFlowReference",
						"parameters": {
							"PrimaryKey": {
								"value": "'@{pipeline().parameters.Primary Key}'",
								"type": "Expression"
							},
							"Columns": {
								"value": "'@{pipeline().parameters.Columns}'",
								"type": "Expression"
							}
						},
						"datasetParameters": {
							"GenericInput": {
								"Folder": {
									"value": "@pipeline().parameters.Folder",
									"type": "Expression"
								}
							},
							"ExistingDimensionTable": {
								"Table": {
									"value": "@pipeline().parameters.TableforSCD2",
									"type": "Expression"
								}
							},
							"DimensionTableSink": {
								"Table": {
									"value": "@pipeline().parameters.TableforSCD2",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"sourceTableName": {
				"type": "String",
				"defaultValue": "People"
			},
			"sourceTableSchema": {
				"type": "String",
				"defaultValue": "Application"
			},
			"tableList": {
				"type": "array"
			},
			"Folder": {
				"type": "String",
				"defaultValue": "SCDType2"
			},
			"TableforSCD2": {
				"type": "String"
			},
			"Primary Key": {
				"type": "String"
			},
			"Columns": {
				"type": "String"
			}
		},
		"annotations": []
	}
}
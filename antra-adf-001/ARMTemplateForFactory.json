{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "antra-adf-001"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"LS_AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSqlDatabase2'"
		},
		"LS_ODS_AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ODS_AzureSqlDatabase2'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsteststorage01.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_IngestWWIData1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachOLTPTable",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.tableList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data from OLTP 2 stagingcontainer",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "OLTP_AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {
												"SourceTableName_02": {
													"value": "@pipeline().parameters.sourceTableName",
													"type": "Expression"
												},
												"SourceSchema01": {
													"value": "@pipeline().parameters.sourceTableSchema",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "OLTP_Json1",
											"type": "DatasetReference",
											"parameters": {
												"TableName4Storage": {
													"value": "@pipeline().parameters.sourceTableName",
													"type": "Expression"
												},
												"SchemaName4Storage": {
													"value": "@pipeline().parameters.sourceTableSchema",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "JoinAndDropData01",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEachOLTPTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "JoinAndDropdataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrderData1": {
										"TableName4Storage": {
											"value": "@pipeline().parameters.sourceTableName",
											"type": "Expression"
										},
										"SchemaName4Storage": {
											"value": "@pipeline().parameters.sourceTableSchema",
											"type": "Expression"
										}
									},
									"OrderLines1": {},
									"sinkOrder1": {
										"ODS_SchemaName": {
											"value": "@pipeline().parameters.sourceTableSchema",
											"type": "Expression"
										},
										"ODS_TableName": {
											"value": "@pipeline().parameters.sourceTableName",
											"type": "Expression"
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourceTableName": {
						"type": "String",
						"defaultValue": "People"
					},
					"sourceTableSchema": {
						"type": "String",
						"defaultValue": "Application"
					},
					"tableList": {
						"type": "array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/JoinAndDropdataflow1')]",
				"[concat(variables('factoryId'), '/datasets/OLTP_AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/OLTP_Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_OrderTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ODS_AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ODS_SchemaName": {
						"type": "String"
					},
					"ODS_TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().ODS_SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().ODS_TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ODS_AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OLTP_AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTableName_02": {
						"type": "String",
						"defaultValue": "Orders"
					},
					"SourceSchema01": {
						"type": "String",
						"defaultValue": "Sales"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema01",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTableName_02",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OLTP_Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName4Storage": {
						"type": "String"
					},
					"SchemaName4Storage": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().TableName4Storage",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SchemaName4Storage",
							"type": "Expression"
						},
						"container": "wwioltp"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"OrderID": {
							"type": "integer"
						},
						"CustomerID": {
							"type": "integer"
						},
						"SalespersonPersonID": {
							"type": "integer"
						},
						"PickedByPersonID": {
							"type": "integer"
						},
						"ContactPersonID": {
							"type": "integer"
						},
						"BackorderOrderID": {
							"type": "integer"
						},
						"OrderDate": {
							"type": "string"
						},
						"ExpectedDeliveryDate": {
							"type": "string"
						},
						"CustomerPurchaseOrderNumber": {
							"type": "string"
						},
						"IsUndersupplyBackordered": {
							"type": "boolean"
						},
						"Comments": {
							"type": "null"
						},
						"DeliveryInstructions": {
							"type": "null"
						},
						"InternalComments": {
							"type": "null"
						},
						"PickingCompletedWhen": {
							"type": "string"
						},
						"LastEditedBy": {
							"type": "integer"
						},
						"LastEditedWhen": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrderLinesTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderLineID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "PackageTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "PickedQuantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickingCompletedWhen",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LastEditedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastEditedWhen",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "OrderLines"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDimension')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table": {
						"type": "string"
					},
					"Schema02": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema02",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ODS_AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ODS_AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinAndDropdataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OLTP_Json1",
								"type": "DatasetReference"
							},
							"name": "OrderData1"
						},
						{
							"dataset": {
								"referenceName": "OrderLinesTable1",
								"type": "DatasetReference"
							},
							"name": "OrderLines1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_OrderTable1",
								"type": "DatasetReference"
							},
							"name": "sinkOrder1"
						}
					],
					"transformations": [
						{
							"name": "joinwithOrderLines1"
						},
						{
							"name": "selectColumnsforOrder1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderID as integer,",
						"          CustomerID as integer,",
						"          SalespersonPersonID as integer,",
						"          PickedByPersonID as integer,",
						"          ContactPersonID as integer,",
						"          BackorderOrderID as integer,",
						"          OrderDate as string,",
						"          ExpectedDeliveryDate as string,",
						"          CustomerPurchaseOrderNumber as string,",
						"          IsUndersupplyBackordered as boolean,",
						"          Comments as string,",
						"          DeliveryInstructions as string,",
						"          InternalComments as string,",
						"          PickingCompletedWhen as string,",
						"          LastEditedBy as integer,",
						"          LastEditedWhen as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine') ~> OrderData1",
						"source(output(",
						"          OrderLineID as integer,",
						"          OrderID as integer,",
						"          StockItemID as integer,",
						"          Description as string,",
						"          PackageTypeID as integer,",
						"          Quantity as integer,",
						"          UnitPrice as decimal(18,2),",
						"          TaxRate as decimal(18,3),",
						"          PickedQuantity as integer,",
						"          PickingCompletedWhen as timestamp,",
						"          LastEditedBy as integer,",
						"          LastEditedWhen as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrderLines1",
						"OrderData1, OrderLines1 join(OrderData1@OrderID == OrderLines1@OrderID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinwithOrderLines1",
						"joinwithOrderLines1 select(mapColumn(",
						"          OrderID = OrderData1@OrderID,",
						"          CustomerID,",
						"          SalespersonPersonID,",
						"          PickedByPersonID,",
						"          BackorderOrderID,",
						"          OrderDate,",
						"          ExpectedDeliveryDate,",
						"          IsUndersupplyBackordered,",
						"          PickingCompletedWhen = OrderData1@PickingCompletedWhen,",
						"          LastEditedBy = OrderData1@LastEditedBy,",
						"          LastEditedWhen = OrderData1@LastEditedWhen,",
						"          OrderLineID,",
						"          StockItemID,",
						"          Description,",
						"          PackageTypeID,",
						"          Quantity,",
						"          UnitPrice,",
						"          TaxRate,",
						"          PickingCompletedWhen = OrderLines1@PickingCompletedWhen,",
						"          LastEditedBy = OrderLines1@LastEditedBy,",
						"          LastEditedWhen = OrderLines1@LastEditedWhen",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectColumnsforOrder1",
						"selectColumnsforOrder1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sinkOrder1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OLTP_Json1')]",
				"[concat(variables('factoryId'), '/datasets/OrderLinesTable1')]",
				"[concat(variables('factoryId'), '/datasets/ODS_OrderTable1')]"
			]
		}
	]
}